
#########################--CLONING_A_REPO--#########################
git clone <url>  #clones and creates remote-tracking branches for each branch
git branch -l  #See available branches after cloning
git checkout <branchname>  #Switch to a particular branch after cloning

git clone -b <branchname> <url>  #clone and checkout a specific branch


######################### #########################
git pull   #get all changes from the remote and merges them while

git fetch   #gets all changes and does NOT merge



git diff   #displays differences in git tracked files

#########################--GETTING_READY_TO_PUBLISH_CHANGES--#########################
git status   #displays local changes if any

git add <-A> or <.> or <filename>   #adds all changes to staging area.

git reset <file>   #removes from staging area before commit leaving blank will remove all adds

git commit -m "message"   #commits all changes locally

git push -u <remote> <branch>   #pushes changes to remote

git branch -a ;displays all branches, -l ;Dislplays local branches, -r ;Displays remote branches

#########################--CREATE_A_BRANCH_FOR_DESIRED_FEATURE--#########################
#########################--https://youtu.be/HVsySz-h9r4?t=1272--#########################
git branch <branchname>  #Create a branch locally
git checkout <branchname>   #changes working branch

#########################--AFTER_COMMIT_PUSH_BRANCH_TO_REMOTE--#########################
#########################--https://youtu.be/HVsySz-h9r4?t=1377--#########################
git push -u origin <branchname>

#########################--MERGE_A_BRANCH--#########################
#########################--https://youtu.be/HVsySz-h9r4?t=1484--#########################
git checkout master
git pull origin master
git branch --merged  #Displays merged branches
git merge <branchname>
git push origin master

#########################--DELETING_A_BRANCH--#########################
#########################--https://youtu.be/HVsySz-h9r4?t=1577--#########################
git branch --merged
git branch -d <branchname>
git branch -a
git push origin --delete <branchname>

#########################--REVERTING_COMMITS--#########################
git reset --soft HEAD^  #Undo the act of committing, leaving everything else intact
git reset HEAD^  #undo the act of committing and everything you've staged, but leave the work tree (your files intact):
git reset --hard HEAD^  #completely undo it, throwing away all uncommitted changes, resetting everything to the previous commit

git reset --hard origin/<your-branch-name>


